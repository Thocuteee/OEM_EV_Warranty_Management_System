-- Cleaned & Finalized PostgreSQL dump for OEM system (no duplicate tables)
-- Fixed typos, foreign keys, and removed duplicate partserial declaration.

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
SET default_tablespace = '';
SET default_table_access_method = heap;

-- =========================================
-- Sequences for primary keys
-- =========================================

CREATE SEQUENCE IF NOT EXISTS public.customer_customer_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.claimattachment_attachment_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.claimpart_claimpart_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.invoice_invoice_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.inventory_inventory_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.part_part_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.partserial_part_serial_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.recallcampaign_campaign_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.report_report_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.servicecenter_center_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.staff_staff_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.technician_technician_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.user_user_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.vehicle_vehicle_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.vehicleparthistory_history_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.warrantyclaim_claim_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.worklog_log_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE IF NOT EXISTS public.campaignvehicle_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;

-- =========================================
-- Tables
-- =========================================

CREATE TABLE public.customer (
    customer_id integer NOT NULL DEFAULT nextval('public.customer_customer_id_seq'::regclass),
    name varchar(255) NOT NULL,
    phone varchar(10) NOT NULL,
    email varchar(255) NOT NULL,
    address text,
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customer_email UNIQUE (email),
    CONSTRAINT customer_phone UNIQUE (phone)
);

CREATE TABLE public.servicecenter (
    center_id integer NOT NULL DEFAULT nextval('public.servicecenter_center_id_seq'::regclass),
    name varchar(255) NOT NULL,
    location varchar(255) NOT NULL,
    CONSTRAINT ServiceCenter_pkey PRIMARY KEY (center_id),
    CONSTRAINT name_center UNIQUE (name),
    CONSTRAINT location_center UNIQUE (location)
);

CREATE TABLE public.part (
    part_id integer NOT NULL DEFAULT nextval('public.part_part_id_seq'::regclass),
    name varchar(255) NOT NULL,
    part_number varchar(255) NOT NULL,
    price numeric(10,2) NOT NULL,
    CONSTRAINT Part_pkey PRIMARY KEY (part_id),
    CONSTRAINT part_number UNIQUE (part_number)
);

CREATE TABLE public.partserial (
    part_serial_id integer NOT NULL DEFAULT nextval('public.partserial_part_serial_id_seq'::regclass),
    part_id integer NOT NULL,
    serial_number varchar(50) NOT NULL,
    date_received date,
    CONSTRAINT PartSerial_pkey PRIMARY KEY (part_serial_id),
    CONSTRAINT part_serial_number UNIQUE (serial_number),
    CONSTRAINT partserial_part_fk FOREIGN KEY (part_id) REFERENCES public.part(part_id)
);

CREATE TABLE public.recallcampaign (
    campaign_id integer NOT NULL DEFAULT nextval('public.recallcampaign_campaign_id_seq'::regclass),
    title varchar(255) NOT NULL,
    start_date date,
    end_date date,
    CONSTRAINT RecallCampaign_pkey PRIMARY KEY (campaign_id),
    CONSTRAINT recall_title UNIQUE (title)
);

CREATE TABLE public.warrantyclaim (
    claim_id integer NOT NULL DEFAULT nextval('public.warrantyclaim_claim_id_seq'::regclass),
    staff_id integer,
    vehicle_id integer,
    customer_id integer,
    technician_id integer,
    center_id integer,
    status varchar(50) DEFAULT 'Pending' NOT NULL,
    description text,
    created_at timestamptz DEFAULT now(),
    update_at timestamptz DEFAULT now(),
    total_cost numeric(10,2) DEFAULT 0,
    approval_status varchar(30) DEFAULT 'Pending',
    CONSTRAINT WarrantyClaim_pkey PRIMARY KEY (claim_id),
    CONSTRAINT warrantyclaim_customer_fk FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id),
    CONSTRAINT warrantyclaim_center_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id)
);

CREATE TABLE public.vehicle (
    vehicle_id integer NOT NULL DEFAULT nextval('public.vehicle_vehicle_id_seq'::regclass),
    customer_id integer NOT NULL,
    VIN varchar(17) NOT NULL,
    model varchar(255) NOT NULL,
    year integer NOT NULL,
    CONSTRAINT Vehicle_pkey PRIMARY KEY (vehicle_id),
    CONSTRAINT VIN_vehicle UNIQUE (VIN),
    CONSTRAINT vehicle_customer_fk FOREIGN KEY (customer_id) REFERENCES public.customer(customer_id)
);

CREATE TABLE public.staff (
    staff_id integer NOT NULL DEFAULT nextval('public.staff_staff_id_seq'::regclass),
    center_id integer,
    name varchar(255) NOT NULL,
    role varchar(50),
    phone varchar(10) NOT NULL,
    username varchar(50) NOT NULL,
    password varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    CONSTRAINT Staff_pkey PRIMARY KEY (staff_id),
    CONSTRAINT staff_phone UNIQUE (phone),
    CONSTRAINT staff_email UNIQUE (email),
    CONSTRAINT staff_center_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id)
);

CREATE TABLE public.technician (
    technician_id integer NOT NULL DEFAULT nextval('public.technician_technician_id_seq'::regclass),
    claim_id integer,
    center_id integer,
    name varchar(50) NOT NULL,
    specialization varchar(255) NOT NULL,
    phone varchar(10) NOT NULL,
    email varchar(50) NOT NULL,
    CONSTRAINT Technician_pkey PRIMARY KEY (technician_id),
    CONSTRAINT techni_phone UNIQUE (phone),
    CONSTRAINT techni_email UNIQUE (email),
    CONSTRAINT techni_center_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id)
);

CREATE TABLE public.claimattachment (
    attachment_id integer NOT NULL DEFAULT nextval('public.claimattachment_attachment_id_seq'::regclass),
    claim_id integer,
    file_url varchar(255) NOT NULL,
    type varchar(50) NOT NULL,
    CONSTRAINT ClaimAttachment_pkey PRIMARY KEY (attachment_id),
    CONSTRAINT attachment_claim_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id)
);

CREATE TABLE public.claimpart (
    claimpart_id integer NOT NULL DEFAULT nextval('public.claimpart_claimpart_id_seq'::regclass),
    claim_id integer NOT NULL,
    part_id integer,
    quantity integer,
    unit_price numeric(10,2),
    total_price numeric(10,2),
    CONSTRAINT ClaimPart_pkey PRIMARY KEY (claimpart_id),
    CONSTRAINT claimpart_claim_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id),
    CONSTRAINT part_claim_fk FOREIGN KEY (part_id) REFERENCES public.part(part_id)
);

CREATE TABLE public.invoice (
    invoice_id integer NOT NULL DEFAULT nextval('public.invoice_invoice_id_seq'::regclass),
    claim_id integer,
    part_id integer,
    center_id integer,
    location_type varchar(50) NOT NULL,
    quantity integer NOT NULL,
    min_stock_level integer DEFAULT 0,
    payment_status varchar(30) DEFAULT 'Unpaid',
    invoice_date date,
    CONSTRAINT Invoice_pkey PRIMARY KEY (invoice_id),
    CONSTRAINT invoice_claim_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id),
    CONSTRAINT part_invoice_fk FOREIGN KEY (part_id) REFERENCES public.part(part_id),
    CONSTRAINT center_invoice_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id)
);

CREATE TABLE public.inventory (
    inventory_id integer NOT NULL DEFAULT nextval('public.inventory_inventory_id_seq'::regclass),
    part_id integer,
    center_id integer,
    amount numeric(10,2) NOT NULL,
    invoice_date date,
    CONSTRAINT Inventory_pkey PRIMARY KEY (inventory_id),
    CONSTRAINT inventory_part_fk FOREIGN KEY (part_id) REFERENCES public.part(part_id),
    CONSTRAINT inventory_center_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id)
);

CREATE TABLE public.report (
    report_id integer NOT NULL DEFAULT nextval('public.report_report_id_seq'::regclass),
    claim_id integer,
    vehicle_id integer,
    technician_id integer,
    center_id integer,
    campaign_id integer NOT NULL,
    diagnosis_codes text,
    action_taken text,
    status varchar(50) DEFAULT 'Pending' NOT NULL,
    report_date date NOT NULL,
    replaced_part text,
    description text,
    started_at timestamptz,
    finished_at timestamptz,
    part_used text,
    part_cost numeric(10,2),
    actual_cost numeric(10,2),
    create_date timestamptz,
    created_by varchar(100) NOT NULL,
    update_at timestamptz,
    update_by varchar(100) NOT NULL,
    CONSTRAINT Report_pkey PRIMARY KEY (report_id),
    CONSTRAINT report_campaign_fk FOREIGN KEY (campaign_id) REFERENCES public.recallcampaign(campaign_id),
    CONSTRAINT report_center_fk FOREIGN KEY (center_id) REFERENCES public.servicecenter(center_id),
    CONSTRAINT report_claim_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id),
    CONSTRAINT report_tech_fk FOREIGN KEY (technician_id) REFERENCES public.technician(technician_id),
    CONSTRAINT report_vehicle_fk FOREIGN KEY (vehicle_id) REFERENCES public.vehicle(vehicle_id)
);

CREATE TABLE public.vehicleparthistory (
    history_id integer NOT NULL DEFAULT nextval('public.vehicleparthistory_history_id_seq'::regclass),
    vehicle_id integer,
    part_serial_id integer,
    claim_id integer,
    date_installed date,
    CONSTRAINT VehiclePartHistory_pkey PRIMARY KEY (history_id),
    CONSTRAINT vehicle_history_fk FOREIGN KEY (vehicle_id) REFERENCES public.vehicle(vehicle_id),
    CONSTRAINT part_serial_history_fk FOREIGN KEY (part_serial_id) REFERENCES public.partserial(part_serial_id),
    CONSTRAINT warrantyclaim_history_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id)
);

CREATE TABLE public.worklog (
    log_id integer NOT NULL DEFAULT nextval('public.worklog_log_id_seq'::regclass),
    claim_id integer,
    technician_id integer,
    start_time timestamptz NOT NULL,
    end_time timestamptz,
    log_date date,
    duration numeric(5,2),
    notes text,
    CONSTRAINT WorkLog_pkey PRIMARY KEY (log_id),
    CONSTRAINT work_claim_fk FOREIGN KEY (claim_id) REFERENCES public.warrantyclaim(claim_id),
    CONSTRAINT work_tech_fk FOREIGN KEY (technician_id) REFERENCES public.technician(technician_id)
);

CREATE TABLE public.campaignvehicle (
    campaign_id integer,
    vehicle_id integer,
    status varchar(255) DEFAULT 'Pending' NOT NULL,
    CONSTRAINT fk_campaignvehicle_campaign FOREIGN KEY (campaign_id) REFERENCES public.recallcampaign(campaign_id),
    CONSTRAINT fk_campaignvehicle_vehicle FOREIGN KEY (vehicle_id) REFERENCES public.vehicle(vehicle_id)
);

CREATE TABLE public."user" (
    user_id integer NOT NULL DEFAULT nextval('public.user_user_id_seq'::regclass),
    report_id integer,
    username varchar(50) NOT NULL,
    password varchar(255) NOT NULL,
    role varchar(20) NOT NULL,
    CONSTRAINT User_pkey PRIMARY KEY (user_id),
    CONSTRAINT username_user UNIQUE (username)
);

-- =========================================
-- Sequences ownership
-- =========================================

ALTER SEQUENCE public.customer_customer_id_seq OWNED BY public.customer.customer_id;
ALTER SEQUENCE public.claimattachment_attachment_id_seq OWNED BY public.claimattachment.attachment_id;
ALTER SEQUENCE public.claimpart_claimpart_id_seq OWNED BY public.claimpart.claimpart_id;
ALTER SEQUENCE public.invoice_invoice_id_seq OWNED BY public.invoice.invoice_id;
ALTER SEQUENCE public.inventory_inventory_id_seq OWNED BY public.inventory.inventory_id;
ALTER SEQUENCE public.part_part_id_seq OWNED BY public.part.part_id;
ALTER SEQUENCE public.partserial_part_serial_id_seq OWNED BY public.partserial.part_serial_id;
ALTER SEQUENCE public.recallcampaign_campaign_id_seq OWNED BY public.recallcampaign.campaign_id;
ALTER SEQUENCE public.report_report_id_seq OWNED BY public.report.report_id;
ALTER SEQUENCE public.servicecenter_center_id_seq OWNED BY public.servicecenter.center_id;
ALTER SEQUENCE public.staff_staff_id_seq OWNED BY public.staff.staff_id;
ALTER SEQUENCE public.technician_technician_id_seq OWNED BY public.technician.technician_id;
ALTER SEQUENCE public.user_user_id_seq OWNED BY public."user".user_id;
ALTER SEQUENCE public.vehicle_vehicle_id_seq OWNED BY public.vehicle.vehicle_id;
ALTER SEQUENCE public.vehicleparthistory_history_id_seq OWNED BY public.vehicleparthistory.history_id;
ALTER SEQUENCE public.warrantyclaim_claim_id_seq OWNED BY public.warrantyclaim.claim_id;
ALTER SEQUENCE public.worklog_log_id_seq OWNED BY public.worklog.log_id;
ALTER SEQUENCE public.campaignvehicle_id_seq OWNED BY public.campaignvehicle.campaign_id;

-- End of final cleaned dump
